entry_list = Semester.find_entry_debater_id(self.debater_id)
        highest_date = []

        # Populating the list of highest dates. The way it works is "Winter 2020" becomes 2020.5 and
        # "Fall 2030" becomes 2030. Ie. Winter semesters get an additional .5 added onto the year
        for entry in entry_list:
            if entry['date'][0] == 'W':
                year = int(entry['date'][7:11]) + 0.5
            else:
                year = int(entry['date'][5:9])
            highest_date.append(year)

        # Determine the highest semester this debater has debated in
        max_date = max(highest_date)

        # If this debater's last semester was Fall:
        if max_date % 1 == 0:
            max_date_str = "Fall " + str(int(max_date))
            one_sem_before = "Winter " + str(int(max_date - 1))
            two_sem_before = "Fall " + str(int(max_date - 1))
            three_sem_before = "Winter " + str(int(max_date - 2))

        # If this debater's last semester was Winter
        else:
            max_date_str = "Winter " + str(int(max_date))
            one_sem_before = "Fall " + str(int(max_date))
            two_sem_before = "Winter " + str(int(max_date - 1))
            three_sem_before = "Fall " + str(int(max_date - 1))

        # return a list of the last 4 semesters in string format
        return [max_date_str, one_sem_before, two_sem_before, three_sem_before]
